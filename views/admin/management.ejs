<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= pageTitle %></title>
  <link rel="stylesheet" href="/css/globals.css">
  <link rel="stylesheet" href="/css/styleguide.css">
  <link rel="stylesheet" href="/css/homepage.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
  <style>
    /* Estilos rápidos. Mova para um arquivo .css se preferir. */
    body { font-family: sans-serif; background-color: #f4f7f6; }
    .main-content-area { padding: 20px; max-width: 1400px; margin: 20px auto; background-color: #fff; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }
    .top-buttons button { margin-right: 10px; padding: 8px 15px; cursor: pointer; border: 1px solid #ccc; background-color: #f0f0f0; border-radius: 4px; }
    .top-buttons button.selected { background-color: #007bff; color: white; border-color: #007bff; }
    .search-bar { margin: 20px 0; display: flex; gap: 10px; }
    .search-bar input[type="text"] { padding: 8px; border: 1px solid #ccc; border-radius: 4px; flex-grow: 1; }
    .search-bar .search-btn, .search-bar .export-btn { padding: 8px 15px; border: none; border-radius: 4px; cursor: pointer; }
    .search-btn { background-color: #28a745; color: white; }
    .export-btn { background-color: #17a2b8; color: white; }
    .table-obras { width: 100%; margin-top: 10px; border-collapse: collapse; }
    .table-obras th, .table-obras td { border: 1px solid #ddd; padding: 10px; text-align: left; vertical-align: middle; }
    .table-obras th { background-color: #f2f2f2; }
    .status { padding: 3px 7px; border-radius: 10px; color: white; font-size: 0.9em; text-transform: capitalize; }
    .status.approved { background-color: #28a745; }
    .status.pending-review { background-color: #ffc107; color: #333; }
    .status.rejected { background-color: #dc3545; }
    .action-icons i { cursor: pointer; margin: 0 5px; color: #555; }
    .action-icons i:hover { color: #007bff; }
    .modal { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); }
    .modal-content { background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 80%; max-width: 400px; text-align: center; border-radius: 8px; }
    .modal-actions button { padding: 10px 20px; margin: 10px; cursor: pointer; border-radius: 4px; border: none; }
    .cancel-btn { background-color: #ccc; }
    .confirm-btn { background-color: #dc3545; color: white; }
    /* Estilos do Header */
    .funcoes-container { background-color: #FFFFFF; padding: 15px 30px; display: flex; align-items: center; border-bottom: 1px solid #E5E8EB; gap: 20px; }
    .nav-link-style { color: inherit; text-decoration: none; font-weight: 500; }
    .nav-link-style.active p, .nav-link-style:hover p { color: #007bff; }
    .nav-link-style p { margin-bottom: 0; }
    .perfil-container { margin-left: auto; display: flex; align-items: center; }
    .perfil-container img { width: 32px; height: 32px; border-radius: 50%; margin-right: 8px;}
    .logout-button-style { background: none; border: none; color: inherit; cursor: pointer; padding: 0; margin-left: 10px; }
  </style>
</head>
<body>
  <%- include('../partials/header'); %>
  </div>
  <main class="main-content-area">
    <h1><%= pageTitle %></h1>
    
    <div class="top-buttons">
      <button id="tabArtworks" class="selected" data-type="artworks">Obras</button>
      <button id="tabArtists" data-type="artists">Artistas</button>
      <button id="tabAccounts" data-type="users">Contas</button>
    </div>

    <div class="search-bar">
      <input type="text" id="searchInput" placeholder="Buscar por Título...">
      <button class="search-btn" id="searchBtn">Pesquisar</button>
      <button class="export-btn" id="exportBtn" onclick="alert('Funcionalidade Exportar Excel não implementada.')">Exportar Excel</button>
    </div>

    <p class="encontrado">Encontrado: <strong id="foundCount"><%= initialData ? initialData.length : 0 %></strong></p>

    <table class="table-obras" id="managementTable">
      <thead id="tableHead">
        </thead>
      <tbody id="tableBody">
        </tbody>
    </table>
</main>

<div id="confirmModal" class="modal">
  <div class="modal-content">
    <p id="modalMessage">Tem certeza que deseja excluir o item?</p>
    <div class="modal-actions">
      <button id="cancelBtn" class="cancel-btn"><i class="fas fa-times"></i> Cancelar</button>
      <button id="confirmBtn" class="confirm-btn"><i class="fas fa-check"></i> Confirmar</button>
    </div>
  </div>
</div>

<script>
  let currentDataType = '<%= initialDataType %>';
  let currentItemIdToDelete = null;
  const adminToken = localStorage.getItem('adminAuthToken'); 

  const tableHead = document.getElementById('tableHead');
  const tableBody = document.getElementById('tableBody');
  const foundCountEl = document.getElementById('foundCount');
  const searchInput = document.getElementById('searchInput');
  
  const modal = document.getElementById("confirmModal");
  const cancelBtn = document.getElementById("cancelBtn");
  const confirmBtn = document.getElementById("confirmBtn");
  const modalMessage = document.getElementById("modalMessage");

  const tabButtons = {
      artworks: document.getElementById('tabArtworks'),
      artists: document.getElementById('tabArtists'),
      users: document.getElementById('tabAccounts')
  };

  function updateTableHeaders(type) {
      let headers = [];
      if (type === 'artworks') {
          headers = ['ID', 'Título', 'Artista', 'Ano', 'Status', 'Ações'];
      } else if (type === 'artists') {
          headers = ['ID', 'Nome', 'Nacionalidade', 'Ano Nasc.', 'Ações'];
      } else if (type === 'users') {
          headers = ['ID', 'Nome', 'Email', 'Admin?', 'Ações'];
      }
      tableHead.innerHTML = `<tr>${headers.map(h => `<th>${h}</th>`).join('')}</tr>`;
  }

  function populateTable(data, type) {
      tableBody.innerHTML = '';
      if (!data || data.length === 0) {
          const cols = tableHead.rows[0]?.cells.length || 5;
          tableBody.innerHTML = `<tr><td colspan="${cols}">Nenhum item encontrado.</td></tr>`;
          foundCountEl.textContent = 0;
          return;
      }
      foundCountEl.textContent = data.length;

      data.forEach(item => {
          const row = tableBody.insertRow();
          let cells = '';
          if (type === 'artworks') {
              row.setAttribute('data-id', item.ArtworkID);
              cells = `<td>${item.ArtworkID}</td>
                       <td><a href="/artworks/${item.ArtworkID}/details-public">${item.Title}</a></td>
                       <td>${item.ArtistName || 'N/A'}</td>
                       <td>${item.CreationYear || 'N/A'}</td>
                       <td><span class="status ${item.status ? item.status.replace('_', '-') : ''}">${item.status || 'N/A'}</span></td>`;
          } else if (type === 'artists') {
              row.setAttribute('data-id', item.ArtistID);
              cells = `<td>${item.ArtistID}</td>
                       <td><a href="/artists/${item.ArtistID}/details">${item.Name}</a></td>
                       <td>${item.Nationality || 'N/A'}</td>
                       <td>${item.BirthYear || 'N/A'}</td>`;
          } else if (type === 'users') {
              row.setAttribute('data-id', item.UserID);
              cells = `<td>${item.UserID}</td>
                       <td>${item.Name}</td>
                       <td>${item.Email}</td>
                       <td><span class="status ${item.IsAdmin ? 'approved' : 'rejected'}">${item.IsAdmin ? 'Sim' : 'Não'}</span></td>`;
          }
          cells += `<td class="action-icons">
                        <i class="fas fa-edit edit-btn" title="Editar"></i>
                        <i class="fas fa-trash delete-btn" title="Excluir"></i>
                    </td>`;
          row.innerHTML = cells;
      });
      attachActionListeners();
  }
  
  async function fetchData(type, searchTerm = '') {
      if (!adminToken) {
          alert('Administrador não autenticado.');
          return;
      }
      let apiUrl = `/api/${type}`;
      // Lógica de busca pode ser aprimorada aqui
      // if (searchTerm) { ... }

      try {
          tableBody.innerHTML = `<tr><td colspan="5">Carregando...</td></tr>`;
          const response = await fetch(apiUrl, {
              headers: { 'Authorization': `Bearer ${adminToken}` }
          });
          if (!response.ok) throw new Error(`Falha ao buscar ${type}`);
          const data = await response.json();
          currentDataType = type;
          updateTableHeaders(type);
          populateTable(data, type);
      } catch (error) {
          console.error(`Erro ao buscar ${type}:`, error);
          tableBody.innerHTML = `<tr><td colspan="5">Erro ao carregar dados: ${error.message}</td></tr>`;
          foundCountEl.textContent = 0;
      }
  }

  function attachActionListeners() {
      document.querySelectorAll(".delete-btn").forEach(trashBtn => {
          trashBtn.addEventListener("click", function() {
              currentItemIdToDelete = this.closest("tr").dataset.id;
              modalMessage.textContent = `Tem certeza que deseja excluir o item ID ${currentItemIdToDelete} do tipo '${currentDataType}'?`;
              modal.style.display = "block";
          });
      });
      document.querySelectorAll(".edit-btn").forEach(editBtn => {
          editBtn.addEventListener("click", function () {
              const itemId = this.closest("tr").dataset.id;
              alert(`Editar item ID ${itemId} do tipo ${currentDataType} (funcionalidade não implementada).`);
          });
      });
  }

  // Event listeners para as abas
  Object.values(tabButtons).forEach(button => {
      button.addEventListener('click', function() {
          Object.values(tabButtons).forEach(btn => btn.classList.remove('selected'));
          this.classList.add('selected');
          const type = this.dataset.type;
          searchInput.value = '';
          searchInput.placeholder = type === 'users' ? 'Buscar por Nome...' : 'Buscar por Título/Nome...';
          fetchData(type);
      });
  });

  // Event listener para o botão de busca (precisaria de APIs de busca no backend)
  document.getElementById('searchBtn').addEventListener('click', () => {
    alert('Funcionalidade de busca no backend não implementada.');
    // fetchData(currentDataType, searchInput.value); // Descomente quando a API de busca estiver pronta
  });

  // Lógica do Modal de Confirmação
  if (cancelBtn) cancelBtn.addEventListener("click", () => { modal.style.display = "none"; });
  if (confirmBtn) {
    confirmBtn.addEventListener("click", async () => {
        if (currentItemIdToDelete && adminToken) {
            try {
                // A URL da API precisa do plural: artworks, artists, users
                const apiEndpoint = currentDataType;
                const response = await fetch(`/api/${apiEndpoint}/${currentItemIdToDelete}`, {
                    method: 'DELETE',
                    headers: { 'Authorization': `Bearer ${adminToken}` }
                });
                const result = await response.json();
                if (!response.ok) throw new Error(result.error || 'Falha ao excluir.');
                alert(result.message);
                fetchData(currentDataType); // Atualiza a tabela
            } catch (error) { alert('Erro ao excluir: ' + error.message); }
        }
        modal.style.display = "none";
        currentItemIdToDelete = null;
    });
  }
  
  // Carregar dados iniciais e configurar ouvintes
  document.addEventListener('DOMContentLoaded', () => {
      updateTableHeaders('<%= initialDataType %>');
      populateTable(<%- JSON.stringify(initialData || []) %>, '<%= initialDataType %>');
  });

  // Script de Logout
  const logoutBtn = document.getElementById('logoutButtonEJS');
  if(logoutBtn) logoutBtn.addEventListener('click', async () => {
        await fetch('/api/auth/logout', { method: 'POST' });
        window.location.href = '/login';
    });
</script>
</body>
</html>